#ДЗ №1
# На вход день недели и проверить является он выходным.
#a = int(input('Введите день недели:'))

#if 5 < a < 8:
 #   print('Выходной')
#else:
 #   print('Нет')
##############################################
 # Второй вариант

#a = int(input('Введите день недели:'))
#if 5 < a < 8:
 #   print('Выходной')
#elif 0 < a < 6:
 #   print('Будний день')
#else:
 #   print('Такого дня недели нет')

################################################
# Напишите программу для проверки истинности утверждения
# -(X v Y v Z) = - X ^ -Y ^ - Z ^

# x = [0,1]
# y = [0,1]
# z = [0,1]
# for i in x:
#     for j in y:
#         for k in z:
#             if not(x and y and z) == (not x or not y or not z):
#                 print(True)
#             else:
#                 print(False)


###############################################

# Заданы координаты точки А (х,y) х != 0, у != 0. Прогрвмма должна указать в какой четверти
# плоскости находится точка.

# x = int(input('Введите число х: '))
# y = int(input('Введите число у:'))
# if x > 0 and y > 0:
#     print('Первая четветь')
# elif x > 0 and y < 0:
#     print('Вторая четверть')
# elif x < 0 and y < 0:
#     print('Третья четверть')
# elif x < 0 and y > 0:
#     print('Четвертая четверть')

###############################################
# По заданой четверти показать возможные координаты точки А(х,у)


# namber = int(input('Введите № четверти от 1 до 4: '))
# if namber == 1:
#     print('x > 0 and y > 0')
# elif namber == 2:
#     print('x > 0 and y < 0')
# elif namber == 3:
#     print('x < 0 and y < 0')
# elif namber == 4:
#     print('x < 0 and y > 0' )

#####################################################   

# Заданы две точки на плоскости координат А(х1,у1) и В(х2,у2). Найти растояние между этими точками.

# x1 = float(input('Введите координату х1: '))
# y1 = float(input('Введите координату у1: '))
# x2 = float(input('Введите координату х2  '))
# y2 = float(input('Введите координату у2: '))
# from math import sqrt # функция нахождения корня квадрвтного
# l = sqrt((x2 - x1)**2 + (y2 - y1)**2)
# l = round(l, 3)
# print(l)


# ДЗ № 2
#Напишите программу, которая принимает на вход число N и выдает набор произведений чисел от 1 до N

# N = int(input('Введите число N: ')) 
# r = range(1, N +1) 
# rez = 1
# for i in r:
#     rez = rez * i
#     print(rez)

##############################################################

# Задайте список из n чисел последовательности $(1+\frac 1 n)^n$ и выведите на экран их сумму.

# N = int(input('Введите число N: '))
# r = range(1, N + 1)
# for i in r:
#     dict = {i:(i * 3) +1}
#     for k in dict.keys():
#      for k in dict. values():
#         print(dict)
    
###########################################################

# Реализуйте алгоритм перемешивания списка.

# import random
# listA = [1,2,3,4,5,6]
# random.shuffle(listA)
# print(listA)

###############################################################
# ДЗ № 3
# Дан список чисел. Найти сумму єлементов списка стоящих на нечетных позициях

# my_list = [2,3,5,9,3]
# print(sum(my_list[1::2]))

#############################################

# Второй вариант

# s1 = [2,3,5,9,3]
# s2 = []
# for i in range(len(s1)):# находим элементы с нечетными индексами
#     if i % 2 != 0:
#         s2.append(s1[i])
# print(sum(s2))

#######################################################################################

#Напишите программу, которая найдёт произведение пар чисел списка.
# Парой считаем первый и последний элемент, второй и предпоследний и т.д.

# from enum import unique

# a = [2,3,5,6,7]
# #b = list(reversed(a))# задаем реверсивній список -b
# b =a[::-1] # задаем реверсивній список - b
# c = [a[i] * b[i] for i in range(len(a))] # перемножаем поэлементно два списка
# unique = c[0:0]
# for i in range(len(c)):# перебирая список оставляем не повторяющиеся элементы
#     if c[i] in unique:  
#      continue
#     unique.append(c[i])
#     print(unique[i])
    
#######################################################################

# Задайте список из вещественных чисел. 
# Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
    
# my_list =[1.1,1.2,3.1,5,10.01]
# i = 0
# for element  in my_list:
#     my_list[i] = round(element % 1,3)
#     i += 1
# for element in my_list:
#     if element == 0:
#      my_list.remove(0)
# print(max(my_list) - min(my_list))

###############################################################

# Напишите программу, которая будет преобразовывать десятичное число в двоичное.

# n = int(input('Введите число n: '))
# m = ''
# while n > 0:
#     m = str(n % 2) + m
#     n = n//2
# print(m)
        
################################################################

#Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
# n = int(input('Введите число n: '))# для n > 0
# def fibonacci(n):
#     a,b =0,1
#     for i in range(n+1):
#         yield a 
#         a,b=b,a+b
# data =list(fibonacci(n))
# print(data)
# i = 0
# for elem in data:
#  if i % 2 == 0:
#   data[i] = elem*(-1)
#  i+=1
#  data1 = data[::-1]
# print( data1)

##################################################################


# ДЗ №4
# 1. Ввычислить число пи, (использовать Ряд Нилаканта или любой другой вариант расчета числа Пи.

# import math # число Пи = 16*arctang(1/5) - 4* arctang(1/239)

# a = math.atan(1/5)
# b = math.atan(1/239)
# c = 16*a - 4*b
# print(c)


############################################################################

#2. Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.

# n = int(input('Введите натуральное число: '))
# muit = []
# for i in range(1, n+1):
#     if n % i == 0:
#         muit.append(int(i))
# print(muit)

############################################################################

#3. Задайте последовательность чисел. 
# Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.

# my_list =[ 1,2,3,2,4,1,1,6,7]
# print(my_list)
# unic = []
# for i in my_list:
#     if i not in unic:
#         unic.append(i)
# print(unic)
   

#################################################################################

#4.Задана натуральная степень n. Сформировать случайным образом список коэффициентов (значения от 0 до 100)
#  многочлена и записать в файл многочлен степени пример записи в файл при 
# n=3 ==> 33x^3 + 8x^2 + 64x + 85 = 0 при n=2 ==> 27x^2 + 95x + 79 = 0


# import random
# import sympy as sym

# k = int(input( 'Введите число к: ' ))
# mas = []
# for i in range(k):
#     mas.append(random.randint(10,99))
# print(mas)
# x =sym.Symbol('x')
# n = []
# i =0
# for i in range(k-1,0-1,-1):
#     n.append(int(i))
# print(n)
# for elem in n:
#     n[i] =  x ** elem
#     i += 1
# polin = [mas[i] * n[i] for i in range(len(mas))]
# polin = str(polin)
# polin = polin.split(',')
# polin = ' +'.join(polin)
# print(polin)


####################################################################################
#5.Даны два файла, в каждом из которых находится запись многочлена. Задача - сформировать файл, 
# содержащий сумму многочленов. 
# (нужно два полинома сложить. Файлы взять благодаря предыдущему заданию).

# import sympy as sym
# x =sym.Symbol('x')
# a = [82*x**4 + 24*x**3 + 53*x**2 + 11*x + 56]
# b = [56*x**4 + 93*x**3 + 66*x**2 + 14*x ]
# c = map(sum,zip(a,b))
# print(list(c))

